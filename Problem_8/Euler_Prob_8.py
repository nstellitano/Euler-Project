__author__ = 'nicholasstellitano'

# The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
#
# 73167176531330624919225119674426574742355349194934
# 96983520312774506326239578318016984801869478851843
# 85861560789112949495459501737958331952853208805511
# 12540698747158523863050715693290963295227443043557
# 66896648950445244523161731856403098711121722383113
# 62229893423380308135336276614282806444486645238749
# 30358907296290491560440772390713810515859307960866
# 70172427121883998797908792274921901699720888093776
# 65727333001053367881220235421809751254540594752243
# 52584907711670556013604839586446706324415722155397
# 53697817977846174064955149290862569321978468622482
# 83972241375657056057490261407972968652414535100474
# 82166370484403199890008895243450658541227588666881
# 16427171479924442928230863465674813919123162824586
# 17866458359124566529476545682848912883142607690042
# 24219022671055626321111109370544217506941658960408
# 07198403850962455444362981230987879927244284909188
# 84580156166097919133875499200524063689912560717606
# 05886116467109405077541002256983155200055935729725
# 71636269561882670428252483600823257530420752963450
#
# Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

num = '7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869' +\
      '4788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290' +\
      '9632952274430435576689664895044524452316173185640309871112172238311362229893423380308135336' +\
      '2766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883' +\
      '9987979087922749219016997208880937766572733300105336788122023542180975125454059475224352584' +\
      '9077116705560136048395864467063244157221553975369781797784617406495514929086256932197846862' +\
      '2482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854' +\
      '1227588666881164271714799244429282308634656748139191231628245861786645835912456652947654568' +\
      '2848912883142607690042242190226710556263211111093705442175069416589604080719840385096245544' +\
      '4362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646' +\
      '710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450'

x = [int(d) for d in (num)]
i = 0
max = 0

while i < (987):
    z = 0
    total = 1
    while z < 13:
        total *= x[i+z]
        z += 1
    if total > max:
        max = total
    i += 1

print max