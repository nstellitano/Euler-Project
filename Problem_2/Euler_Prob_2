#### Euler Problem 2: Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# Solution: the first few even value numbers in the sequence are as follows: 2,4,8,34,144,610,2584
# After 8, each new value n, can be calculated by multiplying n=4*(i-1) + (i-2)

n = 4000000
x = {0: 2, 1: 8}
i =1

while x[i] < n:
    x[i+1]= 4*x[i] +x[i-1]
    i += 1

del(x[i])

print(x)
print(sum(x.values()))